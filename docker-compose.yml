version: '3.8'
services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: evento_qr_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Saladin0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - evento_qr_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d evento_qr_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    restart: unless-stopped
    ports:
      - "3012:8000"
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=evento_qr_db
      - DB_USER=postgres
      - DB_PASSWORD=Saladin0
      - DJANGO_SETTINGS_MODULE=evento_qr.settings
      # URL para conectar con JasperReports
      - JASPER_SERVER_URL=http://jasperreports-server:8080
    volumes:
      - media_data:/app/media
      - static_data:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    networks:
      - evento_qr_network
      - shared-network  # Red compartida agregada
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 evento_qr.wsgi:application"

volumes:
  postgres_data:
  media_data:
  static_data:

networks:
  evento_qr_network:
    driver: bridge
  shared-network:
    external: true  # Red externa compartida